// <auto-generated />
using System;
using ASP.NET_OLX.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASP.NET_OLX.Migrations
{
    [DbContext(typeof(OlxDBContext))]
    [Migration("20240119102056_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories", t =>
                        {
                            t.HasCheckConstraint("Category_check", "[Name] <> ''");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Телефони"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ноутбуки"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Телевізори"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Відеокарти"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Процессори"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Оперативна пам'ять"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Компьютери"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Монитори"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Звукові карти"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Екшн-камери"
                        });
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cities", t =>
                        {
                            t.HasCheckConstraint("Name_check", "[Name] <> ''");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Київ"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Харків"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Кривий Ріг"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mиколаїв"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Луганськ"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Чернігів"
                        });
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Url")
                        .IsUnique();

                    b.ToTable("Images", t =>
                        {
                            t.HasCheckConstraint("Url_check", "[Url] <> ''");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/1we2pcjh47763-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 2,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/yg15qnxbohat2-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 3,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/ewnblvgqpds9-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 4,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/u5ndzznrfi6u1-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 5,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/nkiymda9lrje3-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 6,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/yki05lj0glt51-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 7,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/mqcdn2fy2uy52-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 8,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/gjtip058jonr-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 9,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/ji9icjvsej54-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 10,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/mcydp7sgssqy1-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 11,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/95zqr3wiv1my1-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 12,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/33kqgn9kli8m1-UA/image;s=3024x4032;r=90"
                        },
                        new
                        {
                            Id = 13,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/mp4qu07wkpr83-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 14,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/nq9ectqnizw4-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 15,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/52ljmc61u5ng3-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 16,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/824trbs276xu1-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 17,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/3dln9mvifzek2-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 18,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/4267u72kg6wt3-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 19,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/jpzsul0ocu1u3-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 20,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/w739nrwpg84x2-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 21,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/ryqlkuv5uecs1-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 22,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/1n3vzg4k83xe-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 23,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/l8d663ab98y82-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 24,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/6nwdckysvc833-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 25,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/3s59y8e2rjyh2-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 26,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/xafjn7617wgg1-UA/image;s=1000x700"
                        },
                        new
                        {
                            Id = 27,
                            Url = "https://ireland.apollo.olxcdn.com/v1/files/9entkpyrsyqm2-UA/image;s=1000x700"
                        });
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.SaleAdvertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.ToTable("SaleAdvertisements", t =>
                        {
                            t.HasCheckConstraint("Description_check", "[Description] <> ''");

                            t.HasCheckConstraint("SellerName_check", "[SellerName] <> ''");

                            t.HasCheckConstraint("Title_check", "[Title] <> ''");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CityId = 1,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 849, DateTimeKind.Local).AddTicks(8183),
                            Description = "Продам телефон Redmi 9A в гарному стані на фото видно що має незначні царини роботі вони не впливають а загалом він як новий .",
                            IsNew = false,
                            Price = 1500m,
                            SellerName = "Олександр",
                            Title = "Телефон REDMI 9A"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CityId = 2,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 852, DateTimeKind.Local).AddTicks(5191),
                            Description = "Ніяких mdm блокувань немає. Ноутбук без жодних дефектів і повний комплект(зарядка, коробка, шнур, макулатура і наклейки). Фото коробки і інших дрібниць не кидаю але все маю, нічого не викидав.",
                            IsNew = false,
                            Price = 99900m,
                            SellerName = "Михайло",
                            Title = "MacBook M1 Max 14” 64RAM/32GPU/2Tb ssd"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CityId = 3,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 852, DateTimeKind.Local).AddTicks(5228),
                            Description = "Смарт тв 32” Samsung UE32T4510AUXUA, Smart TV, WiFi, T2. Телевізор білого кольору, 2021 року виробництва.Телевізор в ідеальному стані та повному комплекті, - пульт, ніжнки. Усе в оригіналі, всі функції перевірені та працюють",
                            IsNew = false,
                            Price = 7900m,
                            SellerName = "Микола",
                            Title = "Смарт тв 32” Samsung UE32T4510AUXUA, Smart TV, WiFi, T2"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CityId = 4,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 852, DateTimeKind.Local).AddTicks(5233),
                            Description = "Продам полностью рабочую в отличном состоянии игровую видеокарту AMD RX 5700XT 8GB GDDR6 ASUS.Температура отличная, без каких либо проблем.Проходит тесты ОССТ/FurMark/3DMark без проблем.Потянет большинство популярных игр на хороших настройках графики!",
                            IsNew = false,
                            Price = 8500m,
                            SellerName = "Олена",
                            Title = "Как новая! Видеокарта AMD RX 5700XT 8GB GDDR6 Гарантия!"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CityId = 5,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 852, DateTimeKind.Local).AddTicks(5236),
                            Description = "Intel i5 7400, причина продажу апгрейд, комплектаці BOX, любі тести, також можна купити комплектом, дивіться інші мої оголошення)комплектом віддам за 5к",
                            IsNew = false,
                            Price = 1500m,
                            SellerName = "Ольга",
                            Title = "Процессор intel i5 7400"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CityId = 6,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 852, DateTimeKind.Local).AddTicks(5239),
                            Description = "Продам оперативну пям'ять SAMSUNG 8 GB. SODIMM. DDR-4. 2400 MHz.Планки по 4GB.Були в роботі 1 рік.",
                            IsNew = false,
                            Price = 1000m,
                            SellerName = "Володимир",
                            Title = "Оперативна пям'ять DDR-4 2400 MHz"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            CityId = 7,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 852, DateTimeKind.Local).AddTicks(5242),
                            Description = "Продам тихий игровой компьютер, в хорошем исполнении, с качественных комплектующих, с запасом на апгрейд. Любые проверки и тесты , предпочтительно по месту! Компьютер будет радовать своего нового владельца высокой продуктивностью, и ждет именно вас!",
                            IsNew = false,
                            Price = 14700m,
                            SellerName = "Антон",
                            Title = "Silens! Игровой компьютер I5 9400f, z390, gtx 1070 8 gb,16 gb"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            CityId = 8,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 852, DateTimeKind.Local).AddTicks(5246),
                            Description = "Все летает , новые игры без проблем на ультрах! Battlefield 2042, Call of Duty Modern Warfare прошел 3 части!",
                            IsNew = false,
                            Price = 23500m,
                            SellerName = "Іван",
                            Title = "Игровой компютер, комплект! GTX 1080, монитор MSI 244 герц!"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            CityId = 9,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 852, DateTimeKind.Local).AddTicks(5249),
                            Description = "Все летает , новые игры без проблем на ультрах! Battlefield 2042, Call of Duty Modern Warfare прошел 3 части!",
                            IsNew = true,
                            Price = 50m,
                            SellerName = "Роман",
                            Title = "Зовнішня звукова карта USB 5.1 для комп'ютера та ноутбука (Внешняя)"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            CityId = 10,
                            Date = new DateTime(2024, 1, 19, 12, 20, 55, 852, DateTimeKind.Local).AddTicks(5252),
                            Description = "Продаю свою GoPro 10 так як перейшов на новішу модель . Завжди була в захисних склах і у захиснобу силіконовому чохлі , не топилась (Використовувалась як влогова камера ) можлива зустріч у Києві (правий берег ) або Олх доставка/наложка Торг !!!",
                            IsNew = true,
                            Price = 8000m,
                            SellerName = "Сергій",
                            Title = "Пртдам Gopro 10 black в дуже горошому стані !!!"
                        });
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.SaleAdvertisementImage", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<int>("SaleAdvertisementId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ImageId", "SaleAdvertisementId");

                    b.HasIndex("SaleAdvertisementId");

                    b.ToTable("SaleAdvertisementsImages");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            SaleAdvertisementId = 1,
                            Id = 1
                        },
                        new
                        {
                            ImageId = 2,
                            SaleAdvertisementId = 1,
                            Id = 2
                        },
                        new
                        {
                            ImageId = 3,
                            SaleAdvertisementId = 1,
                            Id = 3
                        },
                        new
                        {
                            ImageId = 4,
                            SaleAdvertisementId = 2,
                            Id = 4
                        },
                        new
                        {
                            ImageId = 5,
                            SaleAdvertisementId = 2,
                            Id = 5
                        },
                        new
                        {
                            ImageId = 6,
                            SaleAdvertisementId = 2,
                            Id = 6
                        },
                        new
                        {
                            ImageId = 7,
                            SaleAdvertisementId = 3,
                            Id = 7
                        },
                        new
                        {
                            ImageId = 8,
                            SaleAdvertisementId = 3,
                            Id = 8
                        },
                        new
                        {
                            ImageId = 9,
                            SaleAdvertisementId = 3,
                            Id = 9
                        },
                        new
                        {
                            ImageId = 10,
                            SaleAdvertisementId = 4,
                            Id = 10
                        },
                        new
                        {
                            ImageId = 11,
                            SaleAdvertisementId = 4,
                            Id = 11
                        },
                        new
                        {
                            ImageId = 12,
                            SaleAdvertisementId = 4,
                            Id = 12
                        },
                        new
                        {
                            ImageId = 13,
                            SaleAdvertisementId = 5,
                            Id = 13
                        },
                        new
                        {
                            ImageId = 14,
                            SaleAdvertisementId = 5,
                            Id = 14
                        },
                        new
                        {
                            ImageId = 15,
                            SaleAdvertisementId = 5,
                            Id = 15
                        },
                        new
                        {
                            ImageId = 16,
                            SaleAdvertisementId = 6,
                            Id = 16
                        },
                        new
                        {
                            ImageId = 17,
                            SaleAdvertisementId = 6,
                            Id = 17
                        },
                        new
                        {
                            ImageId = 18,
                            SaleAdvertisementId = 7,
                            Id = 18
                        },
                        new
                        {
                            ImageId = 19,
                            SaleAdvertisementId = 7,
                            Id = 19
                        },
                        new
                        {
                            ImageId = 20,
                            SaleAdvertisementId = 7,
                            Id = 20
                        },
                        new
                        {
                            ImageId = 21,
                            SaleAdvertisementId = 8,
                            Id = 21
                        },
                        new
                        {
                            ImageId = 22,
                            SaleAdvertisementId = 8,
                            Id = 22
                        },
                        new
                        {
                            ImageId = 23,
                            SaleAdvertisementId = 8,
                            Id = 23
                        },
                        new
                        {
                            ImageId = 24,
                            SaleAdvertisementId = 9,
                            Id = 24
                        },
                        new
                        {
                            ImageId = 25,
                            SaleAdvertisementId = 10,
                            Id = 25
                        },
                        new
                        {
                            ImageId = 26,
                            SaleAdvertisementId = 10,
                            Id = 26
                        },
                        new
                        {
                            ImageId = 27,
                            SaleAdvertisementId = 10,
                            Id = 27
                        });
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.SaleAdvertisement", b =>
                {
                    b.HasOne("ASP.NET_OLX.Models.Data.Entities.Category", "Category")
                        .WithMany("SaleAdvertisements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NET_OLX.Models.Data.Entities.City", "City")
                        .WithMany("SaleAdvertisements")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("City");
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.SaleAdvertisementImage", b =>
                {
                    b.HasOne("ASP.NET_OLX.Models.Data.Entities.Image", "Image")
                        .WithMany("SaleAdvertisements")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NET_OLX.Models.Data.Entities.SaleAdvertisement", "SaleAdvertisement")
                        .WithMany("SaleAdvertisementsImages")
                        .HasForeignKey("SaleAdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("SaleAdvertisement");
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.Category", b =>
                {
                    b.Navigation("SaleAdvertisements");
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.City", b =>
                {
                    b.Navigation("SaleAdvertisements");
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.Image", b =>
                {
                    b.Navigation("SaleAdvertisements");
                });

            modelBuilder.Entity("ASP.NET_OLX.Models.Data.Entities.SaleAdvertisement", b =>
                {
                    b.Navigation("SaleAdvertisementsImages");
                });
#pragma warning restore 612, 618
        }
    }
}
